# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [ created ]

jobs:
  deploy-generic:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine --upgrade


    - name: Build and Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  deploy-cython:
    strategy:
      matrix:
        os: [macos-11, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine Cython --upgrade
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py bdist_wheel
        twine upload dist/*

  deploy-cython-manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Build Wheels
      env:
        CIBW_BUILD: "cp37-*x86_64 cp38-*x86_64 cp39-*x86_64 cp310-*x86_64 cp311-*x86_64"
        CIBW_BUILD_VERBOSITY: 1
        CIBW_TEST_COMMAND: "pytest {package}/test"
        CIBW_BEFORE_BUILD: "ip install -r requirements-dev.txt"
        CIBW_BEFORE_TEST: "pip install -r requirements-test.txt"
      run: |
        python -m pip install --upgrade pip
        python -m pip install cibuildwheel --upgrade
        python -m cibuildwheel --output-dir wheels

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine --upgrade

    - name: Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheels/*
