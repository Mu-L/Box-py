# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [ created ]

jobs:
  deploy-generic:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry --upgrade
        poetry config virtualenvs.create false --local

    - name: Poetry Install
      run: poetry install --with dev
      continue-on-error: true

    - name: Poetry Install 2
      run: poetry install --with dev

    - name: Build and Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

      run: |
        poetry build
        twine upload dist/*

  deploy-cython:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-12, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel twine --upgrade

      - name: Build Wheels
        env:
          CIBW_SKIP: "cp36-* pp* *i686"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_REQUIRES: "pytest msgpack ruamel.yaml tomli tomli-w"
          CIBW_TEST_COMMAND: "pytest {package}/test"
        run: python -m cibuildwheel --output-dir wheels

      - name: Publish Wheels
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload wheels/*
