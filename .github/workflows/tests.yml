# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ test, tests ]
  pull_request:
    branches: [ master, development, develop, test, tests ]

jobs:
  build-checks:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build Wheels
        env:
          CIBW_SKIP: "cp36-* pp* *i686"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_REQUIRES: "pytest msgpack ruamel.yaml tomli tomli-w"
          CIBW_TEST_COMMAND: "pytest {package}/test"
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel --upgrade
          python -m cibuildwheel --output-dir wheels

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: python_box
          path: wheels/*.whl

  lint-and-mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: lint-and-mypy-${{ hashFiles('pyproject.toml') }}

    - name: Install Dependencies
      run: |
        python -m pip install poetry --upgrade
        poetry config virtualenvs.create false --local

    - name: Poetry Install
      run: poetry install --with dev
      continue-on-error: true

    - name: Poetry Install 2
      run: poetry install --with dev

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors, undefined names or print statements
        python -m flake8 box --count --select=E9,F63,F7,F82,T001,T002,T003,T004 --show-source --statistics
        # exit-zero treats all errors as warnings.
        python -m flake8 . --count --exit-zero --max-complexity=20 --max-line-length=120 --statistics --extend-ignore E203

    - name: Run mypy
      run: python -m mypy box

    - name: Build Wheel and Check Distribution Log Description
      run: |
        poetry build
        python -m twine check dist/*

  test-non-cython:
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: test-${{ hashFiles('pyproject.toml') }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry --upgrade
        poetry config virtualenvs.create false --local

    - name: Poetry Install
      run: poetry install --with dev --with test
      continue-on-error: true

    - name: Poetry Install 2
      run: poetry install --with dev --with test

    - name: Poetry Build
      run: poetry build
      continue-on-error: true

    - name: Test with pytest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -m pytest --cov=box test/
